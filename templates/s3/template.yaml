apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-aws-s3
  title: Create AWS S3
  description: Create an Create AWS S3
  tags: [ 'aws', 's3' ]
spec:
  owner: group:platform-team
  type: template
  parameters:
    - title: Project name
      required:
        - name
        - owner
        - region
        - environment
        - action
      properties:
        name:
          title: Name
          type: string
          description: Unique resource name
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner component
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
        region:
          title:  AWS Region
          type: string
          description: AWS region
          enum:
            - ap-southeast-1
        environment:
          title: Environment
          type: string
          description: Deploy environment
          enum:
            - SIT
            - UAT
            - PRD
            - DR
        action:
          title: action
          type: string
          description: Terrafrom action(apply/destroy)
          enum:
            - apply
            - destroy

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}

    - id: pull-request
      name: Pull Request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=infra-as-a-code&owner=warapong-pj
        branchName: aws/s3/${{ parameters.name }}
        title: Create AWS S3 ${{ parameters.name }}
        update: true
        description: |
          # Create AWS S3 resource

          This's PR for create AWS S3 resource.
          Region:  ${{ parameters.region }}
          Resource Name: ${{ parameters.name }}
          Environment: ${{ parameters.environment }}

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps['pull-request'].output.remoteUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Github pull request
        url: ${{ steps['pull-request'].output.remoteUrl }}
        icon: github
    # links:
    #   - title: Open in catalog
    #     icon: catalog
    #     entityRef: ${{ steps['register'].output.entityRef }}
